# Overview: build and create a release via Google Cloud Deploy for GKE
# NOTE: currently requires SCM triggering due to dependency on the COMMIT_SHA variable
substitutions:
  _JFROG_SERVER_NAME: swampupdemo.jfrog.io
  _JFROG_REPO_NAME: swampup-docker
  _JFROG_CLI_VERSION: 2.11.0
  _JFROG_USER: abambah
  _PIPELINE_REGION: us-central1

steps:
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: [ '-c', 'docker login ${_JFROG_SERVER_NAME} -u ${_JFROG_USER} -p $$JFROG_ACCESS_TOKEN' ]
    dir: 'app'
    secretEnv: [ 'JFROG_ACCESS_TOKEN' ]

  - name: '${_JFROG_SERVER_NAME}/${_JFROG_REPO_NAME}/jfrog-cli:${_JFROG_CLI_VERSION}'
    entrypoint: 'bash'
    args: [ '-c', 'jfrog config add ${_JFROG_REPO_NAME} --artifactory-url=https://${_JFROG_SERVER_NAME}/artifactory --interactive=false --access-token=$$JFROG_ACCESS_TOKEN' ]
    env: [ 'TMPDIR=/app' ]
    dir: 'app'
    secretEnv: [ 'JFROG_ACCESS_TOKEN' ]

  # Build and tag using commit sha
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build','--tag=${_JFROG_SERVER_NAME}/${_JFROG_REPO_NAME}/pop-stats/pop-stats:${COMMIT_SHA}', '.', '-f', 'Dockerfile' ]
    dir: 'app'

  # Docker Push the image to artifactiry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', '${_JFROG_SERVER_NAME}/${_JFROG_REPO_NAME}/pop-stats/pop-stats:${COMMIT_SHA}' ]
    dir: 'app'
    secretEnv: [ 'JFROG_ACCESS_TOKEN' ]

    # Create release in Google Cloud Deploy
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args:
      [
          "deploy", "releases", "create", "rel-${SHORT_SHA}",
          "--delivery-pipeline", "pop-stats-pipeline",
          "--region", "${_PIPELINE_REGION}",
          "--annotations", "commitId=${REVISION_ID}",
          "--images", "pop-stats=${_JFROG_SERVER_NAME}/${_JFROG_REPO_NAME}/pop-stats/pop-stats:${COMMIT_SHA}"
      ]
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/jfrog-access-token/versions/1
      env: 'JFROG_ACCESS_TOKEN'

    
